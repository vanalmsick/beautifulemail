var __index = {"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"BeautifulEmail","text":"<p>\u26a0\ufe0f\ud83c\udfd7\ufe0f\ufe0f Note: This is only the first version - actively working on additional features!</p> <p>BeautifulEmail is a python package that makes it easy and quick to send beautifully formatted emails with beuatiful tables/dataframes. BeautifulEmail is for Data Scientists with a deadline.</p> <p>Email Example:</p> <p></p>"},{"location":"index.html#getting-it","title":"Getting it","text":"<p><pre><code>$ pip install beautifulemail\n</code></pre> Update Package: (execute regularly to get the latest features) <pre><code>$ pip install beautifulemail --upgrade\n</code></pre></p> <p></p>"},{"location":"index.html#how-to-use","title":"How to use:","text":"<pre><code>from beautifulemail import Connection, DataFrameToHTML\n\ndf_styled = ...\n\ndf_html = DataFrameToHTML(df=df_styled)\n\n# format numbers automatically \ndf_html.col_num_fmt_auto()\n\n# add background styling to columns\ndf_html.col_styles(column=['last_contact', 'revenue'], classes=['bg_light_blue'])\ndf_html.col_styles(column=['last_contact'], classes=['text_color_amber'])\n\n# use markdown to write email - more infoss here: www.markdownguide.org/cheat-sheet/\nemail_body_markdown = f\"\"\"\nHi,\n\nThis is a test email with **bold text**, *italic text*, ~~strikethrough text~~, &lt;mark&gt;highlited text&lt;/mark&gt;, [hyperlink text](https://www.google.com), and text that could be footnoted&lt;note&gt;[1]&lt;/note&gt;.\n\n# This would be a Heading 1 of an ordered list\n\n1. First step\n2. Second step\n3. Third step\n\n{df_html}\n\nEmbedded image:\n&lt;img src=\"cid:image1\" style=\"width: 100px;\"&gt;\n\nBest wishes,\nMe\n    \"\"\"\n\n    # connect to email server\n    with Connection(host='smtp.gmail.com', port=465, ssl=True, user='myemai@gmail.com', password='my_password') as conn:\n        # send email\n        status = conn.send_email(\n            from_='my_emai@gmail.com',\n            to_=['your_emai@gmail.com', 'second_emai@gmail.com'],\n            subject='Email Subject',\n            body_markdown=email_body_markdown,\n            attachments=['./README.md'],\n            embedded_imgs=['./email_preview.jpg'],\n            dry_run=False\n            )\n\n        # status contains all the email information including the html body\n        print('Email sent:', status)\n\n        # save sent email documntation/summary as excel\n        conn.save_sent_email_summary('sent_emails.xlsx')\n</code></pre>"},{"location":"change_log.html","title":"Changelog &amp; ToDos","text":"<p>All notable changes to this project will be documented in this file.</p>"},{"location":"change_log.html#known-bugs","title":"Known bugs","text":"<ul> <li>None</li> </ul>"},{"location":"change_log.html#012-2024-10-27","title":"[0.1.2] - 2024-10-27","text":""},{"location":"change_log.html#fixed","title":"Fixed","text":"<ul> <li>Fix percentage number formatting</li> </ul>"},{"location":"change_log.html#011-2024-10-27","title":"[0.1.1] - 2024-10-27","text":""},{"location":"change_log.html#added","title":"Added","text":"<ul> <li>Added tests and github workflow for automatic testing</li> <li>Implemented _standarise_email() function</li> <li>Added css styles</li> <li>Add email preview to docs and README</li> </ul>"},{"location":"change_log.html#fixed_1","title":"Fixed","text":"<ul> <li>Minor fixes in documentation</li> <li>Fix number formatting</li> <li>Add backwards compability with py-3.7 removing pandas kwargs that are not supported</li> </ul>"},{"location":"change_log.html#010-2024-10-26","title":"[0.1.0] - 2024-10-26","text":""},{"location":"change_log.html#added_1","title":"Added","text":"<ul> <li>First version with basic features</li> </ul>"},{"location":"change_log.html#still-todo","title":"Still ToDo","text":"<ul> <li>to add</li> </ul>"}]}